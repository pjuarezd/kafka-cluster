#This example shows how to create the Connector cluster image
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: connector-cluster
  annotations:
    strimzi.io/use-connector-resources: "true"
  labels:
    strimzi.io/cluster: cl-01
spec:
  version: 3.2.0
  image: docker.io/pjuarezd/minio-kafka-connector:latest
  replicas: 3
  bootstrapServers: cl-01-kafka-bootstrap:9093
  tls:
    trustedCertificates:
      - secretName: cl-01-cluster-ca-cert
        certificate: ca.crt
      - secretName: minio-tenant-1-ca-cert
        certificate: minio-tenant-1-tls.pem
  authentication:
    type: tls
    certificateAndKey:
      secretName: my-connect
      certificate: user.crt
      key: user.key
  build:
    output:
      type: docker
      image: docker.io/pjuarezd/minio-kafka-connector:latest
      pushSecret: regcred
    plugins:
      - name: minio-connector
        artifacts:
          - type: zip
            url: https://api.hub.confluent.io/api/plugins/confluentinc/kafka-connect-s3/versions/10.0.9/archive
  externalConfiguration:
    env:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: aws-creds
            key: awsAccessKey
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: aws-creds
            key: awsSecretAccessKey
  config:
    group.id: minio-connector
    key.converter: org.apache.kafka.connect.storage.StringConverter
    value.converter: org.apache.kafka.connect.storage.StringConverter
    config.storage.replication.factor: 3
    offset.storage.replication.factor: 3
    status.storage.replication.factor: 3
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status