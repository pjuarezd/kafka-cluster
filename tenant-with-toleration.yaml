metadata:
  creationTimestamp: "2023-02-02T18:41:56Z"
  generation: 4
  name: minio-tenant-1
  namespace: minio-tenant-1
  resourceVersion: "3108"
  uid: a7a515d5-6a58-4116-a63f-3c713b970da8
scheduler:
  name: ""
spec:
  certConfig:
    commonName: '*.minio-tenant-1-hl.minio-tenant-1.svc.cluster.local'
    dnsNames:
    - minio-tenant-1-pool-0-{0...3}.minio-tenant-1-hl.minio-tenant-1.svc.cluster.local
    organizationName:
    - system:nodes
  configuration:
    name: minio-tenant-1-env-configuration
  credsSecret:
    name: minio-tenant-1-secret
  exposeServices:
    console: true
    minio: true
  image: minio/minio:RELEASE.2023-01-31T02-24-19Z
  imagePullPolicy: IfNotPresent
  imagePullSecret: {}
  log:
    audit:
      diskCapacityGB: 5
    db:
      image: library/postgres:13
      initimage: busybox:1.33.1
      resources: {}
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: Always
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
          name: minio-tenant-1-log
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: "5368709120"
        status: {}
    image: minio/operator:v4.4.28
    resources: {}
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: Always
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
  mountPath: /export
  podManagementPolicy: Parallel
  pools:
  - affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: v1.min.io/tenant
              operator: In
              values:
              - minio-tenant-1
            - key: v1.min.io/pool
              operator: In
              values:
              - pool-1
          topologyKey: kubernetes.io/hostname
    name: pool-0
    resources: {}
    servers: 4
    tolerations:
    - effect: NoSchedule
      key: CriticalAddonsOnly
      operator: Equal
      value: "true"
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: "68719476736"
        storageClassName: standard
      status: {}
    volumesPerServer: 4
  prometheus:
    diskCapacityGB: 5
    image: quay.io/prometheus/prometheus:latest
    initimage: busybox:1.33.1
    resources: {}
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: Always
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    sidecarimage: alpine
  requestAutoCert: true
  users:
  - name: minio-tenant-1-user-0
status:
  availableReplicas: 4
  certificates:
    autoCertEnabled: true
  currentState: Waiting for Pods to be ready
  healthMessage: Service Unavailable
  healthStatus: red
  pools:
  - legacySecurityContext: false
    ssName: minio-tenant-1-pool-0
    state: PoolInitialized
  revision: 0
  syncVersion: v4.5
  usage: {}
